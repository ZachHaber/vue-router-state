(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{518:function(t,s,a){"use strict";a.r(s);var e=a(17),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"동적-라우트-매칭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#동적-라우트-매칭"}},[t._v("#")]),t._v(" 동적 라우트 매칭")]),t._v(" "),s("p",[t._v("주어진 패턴을 가진 라우트를 동일한 컴포넌트에 매핑해야하는 경우가 자주 있습니다. 예를 들어 모든 사용자에 대해 동일한 레이아웃을 가지지만 하지만 다른 사용자 ID로 렌더링되어야하는 "),s("code",[t._v("User")]),t._v(" 컴포넌트가 있을 수 있습니다. "),s("code",[t._v("vue-router-2-state")]),t._v("에서 우리는 경로에서 동적 세그먼트를 사용하여 다음을 할 수 있습니다.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>User</div>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 동적 세그먼트는 콜론으로 시작합니다.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("이제 "),s("code",[t._v("/user/foo")]),t._v("와 "),s("code",[t._v("/user/bar")]),t._v(" 같은 URL은 모두 같은 경로에 매핑됩니다.")]),t._v(" "),s("p",[t._v("동적 세그먼트는 콜론 "),s("code",[t._v(":")]),t._v("으로 표시됩니다. 라우트가 일치하면 동적 세그먼트의 값은 모든 컴포넌트에서 "),s("code",[t._v("this.$route.params")]),t._v("로 표시됩니다. 그러므로 "),s("code",[t._v("User")]),t._v("의 템플릿을 다음과 같이 갱신하여 현재 사용자 ID를 표현할 수 있습니다 :")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>User {{ $route.params.id }}</div>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("실제 예제는 "),s("a",{attrs:{href:"http://jsfiddle.net/yyx990803/4xfa2f19/",target:"_blank",rel:"noopener noreferrer"}},[t._v("여기"),s("OutboundLink")],1),t._v("에 있습니다.")]),t._v(" "),s("p",[t._v("동일한 라우트에 여러 동적 세그먼트를 가질 수 있으며, "),s("code",[t._v("$route.params")]),t._v("의 해당 필드에 매핑됩니다.")]),t._v(" "),s("p",[t._v("예:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("패턴")]),t._v(" "),s("th",[t._v("일치하는 패스")]),t._v(" "),s("th",[t._v("$route.params")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("/user/:username")]),t._v(" "),s("td",[t._v("/user/evan")]),t._v(" "),s("td",[s("code",[t._v("{ username: 'evan' }")])])]),t._v(" "),s("tr",[s("td",[t._v("/user/:username/post/:post_id")]),t._v(" "),s("td",[t._v("/user/evan/post/123")]),t._v(" "),s("td",[s("code",[t._v("{ username: 'evan', post_id: '123' }")])])])])]),t._v(" "),s("p",[s("code",[t._v("$route.params")]),t._v(" 외에도 "),s("code",[t._v("$route")]),t._v(" 객체는 "),s("code",[t._v("$route.query")]),t._v(" (URL에 쿼리가 있는 경우), "),s("code",[t._v("$route.hash")]),t._v(" 등의 유용한 정보를 제공합니다. "),s("RouterLink",{attrs:{to:"/kr/api/#the-route-object"}},[t._v("API 레퍼런스")]),t._v("에서 전체 세부 정보를 확인할 수 있습니다.")],1),t._v(" "),s("h3",{attrs:{id:"params-변경-사항에-반응하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#params-변경-사항에-반응하기"}},[t._v("#")]),t._v(" Params 변경 사항에 반응하기")]),t._v(" "),s("p",[t._v("매개 변수와 함께 라우트를 사용할 때 주의 해야할 점은 사용자가 "),s("code",[t._v("/user/foo")]),t._v("에서 "),s("code",[t._v("/user/bar")]),t._v("로 이동할 때 "),s("strong",[t._v("동일한 컴포넌트 인스턴스가 재사용된다는 것입니다.")]),t._v(" 두 라우트 모두 동일한 컴포넌트를 렌더링하므로 이전 인스턴스를 삭제 한 다음 새 인스턴스를 만드는 것보다 효율적입니다. "),s("strong",[t._v("그러나 이는 또한 컴포넌트의 라이프 사이클 훅이 호출되지 않음을 의미합니다.")])]),t._v(" "),s("p",[t._v("동일한 컴포넌트의 params 변경 사항에 반응하려면 "),s("code",[t._v("$route")]),t._v(" 객체를 보면됩니다.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$route")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 경로 변경에 반응하여...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("또는 2.2에서 소개된 "),s("code",[t._v("beforeRouteUpdate")]),t._v(" 가드를 사용하십시오.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react to route changes...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// don't forget to call next()")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"고급-매칭-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#고급-매칭-패턴"}},[t._v("#")]),t._v(" 고급 매칭 패턴")]),t._v(" "),s("p",[s("code",[t._v("vue-router-2-state")]),t._v("는 라우트 매칭 엔진으로 "),s("a",{attrs:{href:"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("path-to-regexp"),s("OutboundLink")],1),t._v("를 사용하기 때문에 선택적 동적 세그먼트, 0개 이상/하나 이상의 요구 사항, 심지어 커스텀 정규식 패턴과 같은 많은 고급 매칭 패턴을 지원합니다. 이 고급 패턴들과 "),s("code",[t._v("vue-router-2-state")]),t._v("에서 사용하는 "),s("a",{attrs:{href:"https://github.com/zachhaber/vue-router-state/blob/dev/examples/route-matching/app.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("예제"),s("OutboundLink")],1),t._v("에 대한 "),s("a",{attrs:{href:"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0#parameters",target:"_blank",rel:"noopener noreferrer"}},[t._v("문서"),s("OutboundLink")],1),t._v("를 확인하십시오.")]),t._v(" "),s("h3",{attrs:{id:"매칭-우선순위"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#매칭-우선순위"}},[t._v("#")]),t._v(" 매칭 우선순위")]),t._v(" "),s("p",[t._v("동일한 URL이 여러 라우트와 일치하는 경우가 있습니다. 이 경우 일치하는 우선 순위는 라우트 정의의 순서에 따라 결정됩니다. 즉, 경로가 더 먼저 정의 될수록 우선 순위가 높아집니다.")])])}),[],!1,null,null,null);s.default=r.exports}}]);