(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{481:function(t,e,a){"use strict";a.r(e);var s=a(17),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Very often we will need to map routes with the given pattern to the same component. For example we may have a "),e("code",[t._v("User")]),t._v(" component which should be rendered for all users but with different user IDs. In "),e("code",[t._v("vue-router-2-state")]),t._v(" we can use a dynamic segment in the path to achieve that:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>User</div>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dynamic segments start with a colon")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/:id'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now URLs like "),e("code",[t._v("/user/foo")]),t._v(" and "),e("code",[t._v("/user/bar")]),t._v(" will both map to the same route.")]),t._v(" "),e("p",[t._v("A dynamic segment is denoted by a colon "),e("code",[t._v(":")]),t._v(". When a route is matched, the value of the dynamic segments will be exposed as "),e("code",[t._v("this.$route.params")]),t._v(" in every component. Therefore, we can render the current user ID by updating "),e("code",[t._v("User")]),t._v("'s template to this:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>User {{ $route.params.id }}</div>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("You can check out a live example "),e("a",{attrs:{href:"https://jsfiddle.net/yyx990803/4xfa2f19/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("You can have multiple dynamic segments in the same route, and they will map to corresponding fields on "),e("code",[t._v("$route.params")]),t._v(". Examples:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("pattern")]),t._v(" "),e("th",[t._v("matched path")]),t._v(" "),e("th",[t._v("$route.params")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("/user/:username")]),t._v(" "),e("td",[t._v("/user/evan")]),t._v(" "),e("td",[e("code",[t._v("{ username: 'evan' }")])])]),t._v(" "),e("tr",[e("td",[t._v("/user/:username/post/:post_id")]),t._v(" "),e("td",[t._v("/user/evan/post/123")]),t._v(" "),e("td",[e("code",[t._v("{ username: 'evan', post_id: '123' }")])])])])]),t._v(" "),e("p",[t._v("In addition to "),e("code",[t._v("$route.params")]),t._v(", the "),e("code",[t._v("$route")]),t._v(" object also exposes other useful information such as "),e("code",[t._v("$route.query")]),t._v(" (if there is a query in the URL), "),e("code",[t._v("$route.hash")]),t._v(", etc. You can check out the full details in the "),e("RouterLink",{attrs:{to:"/api/#the-route-object"}},[t._v("API Reference")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"reacting-to-params-changes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reacting-to-params-changes"}},[t._v("#")]),t._v(" Reacting to Params Changes")]),t._v(" "),e("p",[t._v("One thing to note when using routes with params is that when the user navigates from "),e("code",[t._v("/user/foo")]),t._v(" to "),e("code",[t._v("/user/bar")]),t._v(", "),e("strong",[t._v("the same component instance will be reused")]),t._v(". Since both routes render the same component, this is more efficient than destroying the old instance and then creating a new one. "),e("strong",[t._v("However, this also means that the lifecycle hooks of the component will not be called")]),t._v(".")]),t._v(" "),e("p",[t._v("To react to params changes in the same component, you can simply watch the "),e("code",[t._v("$route")]),t._v(" object:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("watch")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react to route changes...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Or, use the "),e("code",[t._v("beforeRouteUpdate")]),t._v(" "),e("RouterLink",{attrs:{to:"/guide/advanced/navigation-guards.html"}},[t._v("navigation guard")]),t._v(" introduced in 2.2:")],1),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteUpdate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react to route changes...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// don't forget to call next()")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"catch-all-404-not-found-route"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catch-all-404-not-found-route"}},[t._v("#")]),t._v(" Catch all / 404 Not found Route")]),t._v(" "),e("p",[t._v("Regular params will only match characters in between url fragments, separated by "),e("code",[t._v("/")]),t._v(". If we want to match "),e("strong",[t._v("anything")]),t._v(", we can use the asterisk ("),e("code",[t._v("*")]),t._v("):")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// will match everything")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// will match anything starting with `/user-`")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user-*'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("When using "),e("em",[t._v("asterisk")]),t._v(" routes, make sure to correctly order your routes so that "),e("em",[t._v("asterisk")]),t._v(" ones are at the end.\nThe route "),e("code",[t._v("{ path: '*' }")]),t._v(" is usually used to 404 client side. If you are using "),e("em",[t._v("History mode")]),t._v(", make sure to "),e("RouterLink",{attrs:{to:"/guide/essentials/history-mode.html"}},[t._v("correctly configure your server")]),t._v(" as well.")],1),t._v(" "),e("p",[t._v("When using an "),e("em",[t._v("asterisk")]),t._v(", a param named "),e("code",[t._v("pathMatch")]),t._v(" is automatically added to "),e("code",[t._v("$route.params")]),t._v(". It contains the rest of the url matched by the "),e("em",[t._v("asterisk")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Given a route { path: '/user-*' }")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user-admin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pathMatch "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'admin'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Given a route { path: '*' }")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/non-existing'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pathMatch "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '/non-existing'")]),t._v("\n")])])]),e("h2",{attrs:{id:"advanced-matching-patterns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#advanced-matching-patterns"}},[t._v("#")]),t._v(" Advanced Matching Patterns")]),t._v(" "),e("p",[e("code",[t._v("vue-router-2-state")]),t._v(" uses "),e("a",{attrs:{href:"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("path-to-regexp"),e("OutboundLink")],1),t._v(" as its path matching engine, so it supports many advanced matching patterns such as optional dynamic segments, zero or more / one or more requirements, and even custom regex patterns. Check out its "),e("a",{attrs:{href:"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0#parameters",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),e("OutboundLink")],1),t._v(" for these advanced patterns, and "),e("a",{attrs:{href:"https://github.com/zachhaber/vue-router-state/blob/dev/examples/route-matching/app.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("this example"),e("OutboundLink")],1),t._v(" of using them in "),e("code",[t._v("vue-router-2-state")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"matching-priority"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#matching-priority"}},[t._v("#")]),t._v(" Matching Priority")]),t._v(" "),e("p",[t._v("Sometimes the same URL may be matched by multiple routes. In such a case the matching priority is determined by the order of route definition: the earlier a route is defined, the higher priority it gets.")])])}),[],!1,null,null,null);e.default=n.exports}}]);