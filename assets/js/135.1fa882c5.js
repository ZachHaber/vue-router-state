(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{556:function(t,s,a){"use strict";a.r(s);var e=a(17),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"动态路由匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态路由匹配"}},[t._v("#")]),t._v(" 动态路由匹配")]),t._v(" "),s("p",[t._v("我们经常需要把某种模式匹配到的所有路由，全都映射到同个组件。例如，我们有一个 "),s("code",[t._v("User")]),t._v(" 组件，对于所有 ID 各不相同的用户，都要使用这个组件来渲染。那么，我们可以在 "),s("code",[t._v("vue-router-2-state")]),t._v(" 的路由路径中使用“动态路径参数”(dynamic segment) 来达到这个效果：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>User</div>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 动态路径参数 以冒号开头")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("现在呢，像 "),s("code",[t._v("/user/foo")]),t._v(" 和 "),s("code",[t._v("/user/bar")]),t._v(" 都将映射到相同的路由。")]),t._v(" "),s("p",[t._v("一个“路径参数”使用冒号 "),s("code",[t._v(":")]),t._v(" 标记。当匹配到一个路由时，参数值会被设置到\n"),s("code",[t._v("this.$route.params")]),t._v("，可以在每个组件内使用。于是，我们可以更新 "),s("code",[t._v("User")]),t._v(" 的模板，输出当前用户的 ID：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>User {{ $route.params.id }}</div>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("你可以看看这个"),s("a",{attrs:{href:"https://jsfiddle.net/yyx990803/4xfa2f19/",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线例子"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("你可以在一个路由中设置多段“路径参数”，对应的值都会设置到 "),s("code",[t._v("$route.params")]),t._v(" 中。例如：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("模式")]),t._v(" "),s("th",[t._v("匹配路径")]),t._v(" "),s("th",[t._v("$route.params")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("/user/:username")]),t._v(" "),s("td",[t._v("/user/evan")]),t._v(" "),s("td",[s("code",[t._v("{ username: 'evan' }")])])]),t._v(" "),s("tr",[s("td",[t._v("/user/:username/post/:post_id")]),t._v(" "),s("td",[t._v("/user/evan/post/123")]),t._v(" "),s("td",[s("code",[t._v("{ username: 'evan', post_id: '123' }")])])])])]),t._v(" "),s("p",[t._v("除了 "),s("code",[t._v("$route.params")]),t._v(" 外，"),s("code",[t._v("$route")]),t._v(" 对象还提供了其它有用的信息，例如，"),s("code",[t._v("$route.query")]),t._v(" (如果 URL 中有查询参数)、"),s("code",[t._v("$route.hash")]),t._v(" 等等。你可以查看 "),s("RouterLink",{attrs:{to:"/zh/api/#路由对象"}},[t._v("API 文档")]),t._v(" 的详细说明。")],1),t._v(" "),s("h2",{attrs:{id:"响应路由参数的变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应路由参数的变化"}},[t._v("#")]),t._v(" 响应路由参数的变化")]),t._v(" "),s("p",[t._v("提醒一下，当使用路由参数时，例如从 "),s("code",[t._v("/user/foo")]),t._v(" 导航到 "),s("code",[t._v("/user/bar")]),t._v("，"),s("strong",[t._v("原来的组件实例会被复用")]),t._v("。因为两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效。"),s("strong",[t._v("不过，这也意味着组件的生命周期钩子不会再被调用")]),t._v("。")]),t._v(" "),s("p",[t._v("复用组件时，想对路由参数的变化作出响应的话，你可以简单地 watch (监测变化) "),s("code",[t._v("$route")]),t._v(" 对象：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$route")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对路由变化作出响应...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("或者使用 2.2 中引入的 "),s("code",[t._v("beforeRouteUpdate")]),t._v(" "),s("RouterLink",{attrs:{to:"/zh/guide/advanced/navigation-guards.html"}},[t._v("导航守卫")]),t._v("：")],1),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react to route changes...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// don't forget to call next()")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"捕获所有路由或-404-not-found-路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#捕获所有路由或-404-not-found-路由"}},[t._v("#")]),t._v(" 捕获所有路由或 404 Not found 路由")]),t._v(" "),s("p",[t._v("常规参数只会匹配被 "),s("code",[t._v("/")]),t._v(" 分隔的 URL 片段中的字符。如果想匹配"),s("strong",[t._v("任意路径")]),t._v("，我们可以使用通配符 ("),s("code",[t._v("*")]),t._v(")：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会匹配所有路径")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会匹配以 `/user-` 开头的任意路径")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user-*'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当使用"),s("em",[t._v("通配符")]),t._v("路由时，请确保路由的顺序是正确的，也就是说含有"),s("em",[t._v("通配符")]),t._v("的路由应该放在最后。路由 "),s("code",[t._v("{ path: '*' }")]),t._v(" 通常用于客户端 404 错误。如果你使用了"),s("em",[t._v("History 模式")]),t._v("，请确保"),s("RouterLink",{attrs:{to:"/zh/guide/essentials/history-mode.html"}},[t._v("正确配置你的服务器")]),t._v("。")],1),t._v(" "),s("p",[t._v("当使用一个"),s("em",[t._v("通配符")]),t._v("时，"),s("code",[t._v("$route.params")]),t._v(" 内会自动添加一个名为 "),s("code",[t._v("pathMatch")]),t._v(" 参数。它包含了 URL 通过"),s("em",[t._v("通配符")]),t._v("被匹配的部分：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给出一个路由 { path: '/user-*' }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user-admin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pathMatch "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'admin'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给出一个路由 { path: '*' }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/non-existing'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pathMatch "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '/non-existing'")]),t._v("\n")])])]),s("h2",{attrs:{id:"高级匹配模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级匹配模式"}},[t._v("#")]),t._v(" 高级匹配模式")]),t._v(" "),s("p",[s("code",[t._v("vue-router-2-state")]),t._v(" 使用 "),s("a",{attrs:{href:"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("path-to-regexp"),s("OutboundLink")],1),t._v(" 作为路径匹配引擎，所以支持很多高级的匹配模式，例如：可选的动态路径参数、匹配零个或多个、一个或多个，甚至是自定义正则匹配。查看它的"),s("a",{attrs:{href:"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0#parameters",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),s("OutboundLink")],1),t._v("学习高阶的路径匹配，还有"),s("a",{attrs:{href:"https://github.com/zachhaber/vue-router-state/blob/dev/examples/route-matching/app.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个例子 "),s("OutboundLink")],1),t._v("展示 "),s("code",[t._v("vue-router-2-state")]),t._v(" 怎么使用这类匹配。")]),t._v(" "),s("h2",{attrs:{id:"匹配优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配优先级"}},[t._v("#")]),t._v(" 匹配优先级")]),t._v(" "),s("p",[t._v("有时候，同一个路径可以匹配多个路由，此时，匹配的优先级就按照路由的定义顺序：路由定义得越早，优先级就越高。")])])}),[],!1,null,null,null);s.default=r.exports}}]);